{"version":3,"sources":["grinning-cat-with-smiling-eyes.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","useState","quote","setQuote","author","setAuthor","cleanHtml","html","x","document","createElement","innerHTML","innerText","useEffect","a","fetch","response","json","data","filter","e","content","protected","map","rendered","title","idx","setTimeout","className","src","cat","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gQAAe,MAA0B,2D,eC+C1BA,MA1Cf,SAAaC,GAAQ,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,OAEUF,mBAAS,IAFnB,mBAEXG,EAFW,KAEHC,EAFG,KAGZC,EAAa,SAAAC,GAAS,IAAIC,EAAEC,SAASC,cAAc,OAAwB,OAAjBF,EAAEG,UAAUJ,EAAYC,EAAEI,WAU1F,OARAC,qBAAU,kBAAI,uCAAC,8BAAAC,EAAA,sEACUC,MAAM,gEADhB,cACPC,EADO,gBAEMA,EAASC,OAFf,cAEPC,EAFO,gBAGPA,EAAKC,QAAO,SAAAC,GAAC,OAAGA,EAAEC,QAAQC,aAC7BC,KAAI,SAAAH,GAAI,IAAD,EAAmB,CAACA,EAAEC,QAAQG,SAASJ,EAAEK,MAAMD,UAAUD,IAAIjB,GAA7D,mBAAwE,MAAO,CAACJ,MAAhF,KAAsFE,OAAtF,SACPmB,KAAI,WAAgBG,GAAhB,IAAExB,EAAF,EAAEA,MAAME,EAAR,EAAQA,OAAR,OAAsBuB,YAAW,kBAAIxB,EAASD,GAAOG,EAAUD,KAAQ,IAAMsB,MALvE,2CAAD,yDAMT,CAACvB,EAASE,IAGb,sBAAKuB,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAKF,UAAU,WAAWG,IAAI,SACxC,+BACE,+BAAO7B,IACP,8BAAME,UAgBV,kEC5BS4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,SAM1BZ,M","file":"static/js/main.b20c7621.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/grinning-cat-with-smiling-eyes.65e6bdae.svg\";","//import logo from './logo.svg';\nimport React, { useEffect, useState } from 'react';\nimport cat from './grinning-cat-with-smiling-eyes.svg';\nimport './App.css';\n\nfunction App(props) {\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const cleanHtml =  html => {let x=document.createElement(\"div\");x.innerHTML=html;return x.innerText}\n\n  useEffect(()=>(async function cc(){\n    const response = await fetch(\"https://quotesondesign.com/wp-json/wp/v2/posts/?orderby=rand\");\n    const data = await response.json();\n    await data.filter(e=>!e.content.protected)\n      .map(e=>{let[quote,author]=[e.content.rendered,e.title.rendered].map(cleanHtml);return {quote,author} })\n      .map(({quote,author},idx)=>setTimeout(()=>setQuote(quote)+setAuthor(author),20000*idx));\n  })(),[setQuote,setAuthor]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={cat} className=\"App-logo\" alt=\"logo\" />\n        <h1>\n          <span>{quote}</span>\n          <sub>{author}</sub>\n        </h1>\n        {/*\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n         */}\n      </header>\n      <footer>\n        first ract app... shock!\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}